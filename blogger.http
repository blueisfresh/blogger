### Blogger API - HTTP Tests

@baseUrl = http://localhost:8080/api

### Section 1: Tag Endpoints

## 1.1 Create Tags

# Create Tag: Programming
POST {{baseUrl}}/tag
Content-Type: application/json

{
  "tagName": "Programming"
}

###

# Create Tag: Java
POST {{baseUrl}}/tag
Content-Type: application/json

{
  "tagName": "Java"
}

###

# Create Tag: Spring Boot
POST {{baseUrl}}/tag
Content-Type: application/json

{
  "tagName": "Spring Boot"
}

###

# Create Tag: Web Development
POST {{baseUrl}}/tag
Content-Type: application/json

{
  "tagName": "Web Development"
}

###

# Create Tag: Cloud
POST {{baseUrl}}/tag
Content-Type: application/json

{
  "tagName": "Cloud"
}

###

# Create Tag: AWS
POST {{baseUrl}}/tag
Content-Type: application/json

{
  "tagName": "AWS"
}

###

# Create Tag: Backend
POST {{baseUrl}}/tag
Content-Type: application/json

{
  "tagName": "Backend"
}

###

# Attempt to Create Tag with blank name (Expected: 400 Bad Request)
POST {{baseUrl}}/tag
Content-Type: application/json

{
  "tagName": ""
}

###

## 1.2 Get All Tags
GET {{baseUrl}}/tag

###

## 1.3 Get Tag by ID (Assuming ID 1 is "Programming" or "Web Development" after update)
GET {{baseUrl}}/tag/1

###

## 1.4 Update Tag (Assuming ID 1 is the first tag created)
# Update Tag ID 1 to "Frontend Development"
PUT {{baseUrl}}/tag/1
Content-Type: application/json

{
  "tagName": "Frontend Development"
}

###

# Attempt to Update Tag with blank name (Expected: 400 Bad Request)
PUT {{baseUrl}}/tag/1
Content-Type: application/json

{
  "tagName": ""
}

###

## 1.5 Delete Tag (Assuming ID 2 is "Java")
DELETE {{baseUrl}}/tag/2

###

## 1.6 Verify Tag Deletion (Expected: 404 Not Found for ID 2)
GET {{baseUrl}}/tag/2

###

## 1.7 Get All Tags After Deletion
GET {{baseUrl}}/tag

###


### Section 2: Blog Endpoints

## 2.1 Create Blogs

# Create Blog 1: Spring Boot Blog (using existing tags by name)
# Tags should be: "Frontend Development" (ID 1 - updated), "Spring Boot" (ID 3), "Backend" (ID 7)
POST {{baseUrl}}/blog
Content-Type: application/json

{
  "title": "A Deep Dive into Spring Boot",
  "content": "Explore advanced features and best practices for building robust Spring Boot applications. This includes data access patterns, security, and deployment strategies.",
  "category": "Technology",
  "tagNames": ["Frontend Development", "Spring Boot", "Backend"]
}

###

# Create Blog 2: Cloud Computing Introduction (will create new tags "Cloud" and "AWS" if they don't exist)
POST {{baseUrl}}/blog
Content-Type: application/json

{
  "title": "Introduction to Cloud Computing Principles",
  "content": "Understand the fundamental concepts of cloud computing, including IaaS, PaaS, SaaS, and the benefits of cloud adoption for modern businesses.",
  "category": "Cloud Computing",
  "tagNames": ["Cloud", "AWS"]
}

###

# Attempt to Create Blog with invalid data (Expected: 400 Bad Request)
POST {{baseUrl}}/blog
Content-Type: application/json

{
  "title": "",
  "content": "Short",
  "category": "",
  "tagNames": []
}

###

## 2.2 Get All Blogs
GET {{baseUrl}}/blog

###

## 2.3 Get Blog by ID (Assuming ID 1 is the first blog created)
GET {{baseUrl}}/blog/1

###

## 2.4 Search Blogs

# Search by searchTerm "boot" (should find Blog 1)
GET {{baseUrl}}/blog/search?searchTerm=boot

###

# Search by searchTerm "cloud" (should find Blog 2)
GET {{baseUrl}}/blog/search?searchTerm=cloud

###

# Search by searchTerm "development" (should find Blog 1 via tag or category/title)
GET {{baseUrl}}/blog/search?searchTerm=development

###

# Search by non-existent term (Expected: 404 Not Found)
GET {{baseUrl}}/blog/search?searchTerm=nonexistent

###

## 2.5 Update Blog (Assuming ID 1 is the first blog created)
# Update Blog ID 1: change title, content, category, and tags
# Tags will be replaced by: "Spring Boot", "Java", "Programming"
PUT {{baseUrl}}/blog/1
Content-Type: application/json

{
  "title": "Mastering Spring Boot with JPA",
  "content": "Updated content: This blog post now focuses more on database interaction with Spring Data JPA and Hibernate.",
  "category": "Backend Development",
  "tagNames": ["Spring Boot", "Java", "Programming"]
}

###

# Attempt to Update Blog with invalid data (Expected: 400 Bad Request)
PUT {{baseUrl}}/blog/1
Content-Type: application/json

{
  "title": "",
  "content": "Too short",
  "category": "x",
  "tagNames": []
}

###

## 2.6 Delete Blog (Assuming ID 2 is the second blog created)
DELETE {{baseUrl}}/blog/2
Content-Type: application/json # Required for some clients even with no body

###

## 2.7 Verify Blog Deletion (Expected: 404 Not Found for ID 2)
GET {{baseUrl}}/blog/2

###

## 2.8 Get All Blogs After Deletion
GET {{baseUrl}}/blog

###